#version: "3.8"
#
#services:
#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/conf.d:/etc/nginx/conf.d
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    depends_on:
#      - backend
#    networks:
#      - rede_compras
#  backend:
#    image: ${DOCKERHUB_USERNAME}/backend:latest
#    container_name: backend
#    ports:
#      - "3000:3000"
#      - "2525:2525"
#    working_dir: /BackEnd
#    environment:
#      - MONGO_URI=${MONGODB_URI}
#      - SECRET_KEY=${SECRET_KEY}
#    networks:
#      - rede_compras
#
#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#    networks:
#      - rede_compras
#  database:
#    image: mongo:latest
#    container_name: mongo
#    volumes:
#      - mongo_data:/data/db
#    networks:
#      - rede_compras
#    ports:
#      - 27017:27017
#    environment:
#      # Definir o usuário e senha do banco de dados
#      #- MONGO_INITDB_ROOT_USERNAME=thiagodiegoli
#      #- MONGO_INITDB_ROOT_PASSWORD=pdgjoxtuGQACsPmy
#      - MONGO_INITDB_DATABASE=${MONGODB_DB}
#      - MONGO_INITDB_ROOT_USERNAME=admin # Comentar quando não for pela aws
#      - MONGO_INITDB_ROOT_PASSWORD=adminfatec # Comentar quando não for pela aws
#      - MONGODB_URI=${MONGODB_URI}
#      - MONGODB_DB=${MONGODB_DB}

version: "3.8"

services:
  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql-compras
  #   environment:
  #     MYSQL_ROOT_PASSWORD: adminfatec
  #     MYSQL_DATABASE: projetoCompras
  #     MYSQL_USER: admin
  #     MYSQL_PASSWORD: adminfatec
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   networks:
  #     - rede_compras
  #   command: --default-authentication-plugin=mysql_native_password

  postgres:
    image: postgres:16
    container_name: postgres-compras
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminfatec
      POSTGRES_DB: projetoCompras
    ports:
      - "5432:5432" # Porta padrão do Postgres
    networks:
      - rede_compras

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - .:/BackEnd
      - /BackEnd/node_modules
    working_dir: /BackEnd
    environment:
      - DATABASE_URL=postgresql://admin:adminfatec@postgres:5432/projetoCompras
      - DB_HOST=postgres
      - DB_USER=admin
      - DB_PASSWORD=adminfatec
      - DB_NAME=projetoCompras
      - DB_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - EXPIRES_IN=${EXPIRES_IN}
      - PORT=4000
    depends_on:
      - postgres
    networks:
      - rede_compras

  # #backend
  # back_end:
  #   image:
  #   build:
  #     context:
  #     dockerfile: Dockerfile
  #   container_name: back_end
  #   environment:
  #
  #   depends_on:
  #     - mongo
  #   ports:
  #     - "4000:4000"
  #   networks:
  #     - rede_compras

# networks:
#   rede_compras:
#     driver: bridge

volumes:
  mysql_data:

networks:
  rede_compras:
    driver: bridge
